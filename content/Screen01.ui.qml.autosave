

/*
This is a UI file (.ui.qml) that is intended to be edited in Qt Design Studio only.
It is supposed to be strictly declarative and only uses a subset of QML. If you edit
this file manually, you might introduce QML code that is not supported by Qt Design Studio.
Check out https://doc.qt.io/qtcreator/creator-quick-ui-forms.html for details on .ui.qml files.
*/
import QtQuick 6.4
import QtQuick.Controls 6.4
import TaskListApp
import QtQuick.Layouts 1.0

Rectangle {
    id: rectangle
    width: Constants.width
    height: Constants.height

    color: Constants.backgroundColor
    property bool isDialogOpen: false
    
    Column {
        id: column
        anchors.left: parent.left
        anchors.right: parent.right
        anchors.top: parent.top
        anchors.bottom: parent.bottom
        anchors.rightMargin: 10
        anchors.leftMargin: 10
        anchors.bottomMargin: 100
        anchors.topMargin: 50
        
        Repeater {
            id: repeater
        }
    }
    
    
    Rectangle {
        id: taskItem
        x: 8
        y: 83
        width: 382
        height: 74
        color: "#d6d7d7"
        radius: 15
        border.color: "#b3a1a1"
        
        CheckBox {
            id: checkBox
            height: 45
            text: qsTr("Check Box")
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.top: parent.top
            font.pointSize: 22
            anchors.rightMargin: 10
            anchors.leftMargin: 10
            anchors.topMargin: 3
        }
    }
    
    
    
    
    
    
    
    
    Rectangle {
        id: addNewTaskDialog
        x: 10
        y: 584
        width: 380
        height: 152
        visible: rectangle.isDialogOpen
        color: "#d6d7d7"
        radius: 15
        border.color: "#b3a1a1"
        
        TextField {
            id: taskTextInput
            height: 60
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.top: parent.top
            anchors.rightMargin: 8
            anchors.leftMargin: 8
            anchors.topMargin: 25
            placeholderText: qsTr("Write a new task...")
        }
        
        RowLayout {
            x: 8
            y: 91
            width: 364
            height: 48
            spacing: 50
            Button {
                id: cancelButton
                width: 139
                text: qsTr("Add Task")
                Layout.fillWidth: true
                
                Connections {
                    target: cancelButton
                    onClicked: rectangle.isDialogOpen = false
                    
                }
            }
            
            Button {
                id: addButton
                text: qsTr("Cancel")
                Layout.fillWidth: true
                
                Connections {
                    target: addButton
                    onClicked: rectangle.isDialogOpen = false
                    
                }
            }
        }
    }
    
    Button {
        id: addNewTaskButton
        y: 720
        height: 48
        text: qsTr("Add New Task")
        anchors.left: parent.left
        anchors.right: parent.right
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 10
        anchors.rightMargin: 10
        anchors.leftMargin: 10
        
        Connections {
            target: addNewTaskButton
            onClicked: rectangle.isDialogOpen = !rectangle.isDialogOpen
        }
    }
    
    Text {
        id: titleText
        text: qsTr("Task List")
        anchors.left: parent.left
        anchors.right: parent.right
        anchors.top: parent.top
        font.pixelSize: 30
        horizontalAlignment: Text.AlignHCenter
        verticalAlignment: Text.AlignVCenter
        anchors.rightMargin: 150
        anchors.leftMargin: 150
        anchors.topMargin: 8
    }
    
    states: [
        State {
            name: "clicked"
            when: addNewTaskButton.checked
        }
    ]
}
